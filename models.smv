
MODULE UART (proc)
VAR
	state : {idle, receive, transmit};
	Rx : unsigned word[8];--vector of bytes
	Tx : unsigned word[8];

MODULE MEM (proc)
VAR
-- main memory data
	K : boolean; 
	data : array 0..3 of boolean;
ASSIGN
	init (data[0]) := FALSE;
	init (data[1]) := K;
	init (data[2]) := FALSE;
	
	--init (data) := {TRUE, TRUE, TRUE};
	next (data[0]) :=
		case
			--proc = write-K : 00; --this should never occur
			proc = write : data[0];
			TRUE : data[1];
		esac;
	
MODULE main
VAR
-- system state	
	proc : {idle, read, write};
	memory : MEM (proc);
	uart0 : UART (proc);
ASSIGN
	init (proc) := read;
	next (proc) :=
		case
			TRUE : proc;
		esac;
LTLSPEC G (proc != write) -> memory.K = next(memory.K)
	
